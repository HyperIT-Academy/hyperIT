import express from 'express';
import cors from 'cors';
import axios from 'axios';

const app = express();

//CORS-–∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
const corsOptions = {
  origin: 'https://hyperitacademy.com',
  methods: ['GET', 'POST', 'OPTIONS'],
  allowedHeaders: ['Content-Type'],
  credentials: true,
};

app.use(cors(corsOptions));

app.options('*', cors(corsOptions));

app.use(express.json());

app.get('/', (req, res) => {
  res.send('Server is running!');
});

const SMARTCRM_KEY = process.env.SMARTCRM_KEY;
const SMARTCRM_SECRET = process.env.SMARTCRM_SECRET;

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

app.post('/api/send', async (req, res) => {
  const { name, phone, email } = req.body;

  const currentDateTime = new Date().toLocaleString('uk-UA', {
    timeZone: 'Europe/Kyiv',
    day: '2-digit',
    month: '2-digit',
    year: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
  const dealName = `${name} - –£–≥–æ–¥–∞ –≤—ñ–¥ ${currentDateTime}`;

    const telegramMessage = `
üì© –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑ Facebook:

üë§ –Ü–º'—è: ${name}
üîó Email: ${email}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}

üïí ${currentDateTime}
`;

  try {
    // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram
    axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      chat_id: TELEGRAM_CHAT_ID,
      text: telegramMessage,
    }).catch(err => {
      console.error('–ü–æ–º–∏–ª–∫–∞ Telegram:', err.message);
    });
    
    // //CRM:–°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞
    // const clientResponse = await axios.post('https://api.binotel.com/api/4.0/smartcrm/client-create.json', {
    //   "name": name,
    //   "assignedToId": 445706,
    //   "email": email,
    //   "numbers": [phone],
    //   "key": SMARTCRM_KEY,
    //   "secret": SMARTCRM_SECRET,
    // });

    // // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–ª—ñ—î–Ω—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π
    // const customerId = clientResponse.data?.result?.id;

    // if (!customerId) {
    //   console.error('–ü–æ–≤–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø–æ–º–∏–ª–∫–∏ CRM:', JSON.stringify(clientResponse.data, null, 2));
    //   return res.status(500).json({ success: false, message: '–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞' });
    // }

    // console.log('–ö–ª—ñ—î–Ω—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –∑ ID:', customerId);

    // //CRM:–°—Ç–≤–æ—Ä—é—î–º–æ —É–≥–æ–¥—É —ñ –ø—Ä–∏–≤'—è–∑—É—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞
    // const dealResponse = await axios.post('https://api.binotel.com/api/4.0/smartcrm/deal-create.json', {
    //   name: dealName,
    //   key: SMARTCRM_KEY,
    //   secret: SMARTCRM_SECRET,
    //   pipelineId: 6046,
    //   stageId: 42467,
    //   customerId: customerId,
    //   budget: 0,
    //   contacts: [
    //     {
    //       name: name,
    //       phones: [phone],
    //       emails: [email],
    //     }
    //   ]
    // });

    // console.log('–£–≥–æ–¥–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞:', dealResponse.data);

    // res.json({ success: true, data: dealResponse.data });

  } catch (error) {
    if (error.response) {
      console.error('–ü–æ–≤–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø–æ–º–∏–ª–∫–∏ CRM:', JSON.stringify(error.response.data, null, 2));
    } else {
      console.error('Unknown Error:', error.message);
    }
    res.status(500).json({ success: false, message: '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –≤ CRM' });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—ñ ${PORT}`));
